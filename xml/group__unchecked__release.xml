<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__unchecked__release" kind="group">
    <compoundname>unchecked_release</compoundname>
    <title>No bound checking</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__unchecked__release_1gaac82df2f52fc4910a4edd434299d41aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void softrender::window_t::draw_point</definition>
        <argsstring>(int const t_i, int const t_j, pixel_t const &amp;t_pixel)</argsstring>
        <name>draw_point</name>
        <param>
          <type>int const</type>
          <declname>t_i</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>t_j</declname>
        </param>
        <param>
          <type>pixel_t const &amp;</type>
          <declname>t_pixel</declname>
        </param>
        <briefdescription>
<para>Draws a point at coordinate (x=<computeroutput>t_j</computeroutput>, y=<computeroutput>t_i</computeroutput>). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_i</parametername>
</parameternamelist>
<parameterdescription>
<para>The line on which the pixel will be put. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column on which the pixel will be put. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_pixel</parametername>
</parameternamelist>
<parameterdescription>
<para>The color of the point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="150" column="1" bodyfile="src/softrender.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__unchecked__release_1ga8faaf71a333a866b4239f4f70a30748d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void softrender::window_t::draw_point</definition>
        <argsstring>(point_t const &amp;t_point, pixel_t const &amp;t_pixel)</argsstring>
        <name>draw_point</name>
        <param>
          <type>point_t const &amp;</type>
          <declname>t_point</declname>
        </param>
        <param>
          <type>pixel_t const &amp;</type>
          <declname>t_pixel</declname>
        </param>
        <briefdescription>
<para>Draws a point using a more traditional approach(x and y coordinates instead of lines and columns in a matrix). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="158" column="1" bodyfile="src/softrender.cpp" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__unchecked__release_1ga8e9d90ce55a5fb4f1b7850424488b9f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool softrender::window_t::closed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>closed</name>
        <briefdescription>
<para>Returns true if the window will close. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If you press ESCAPE the application terminates. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="167" column="1" bodyfile="src/softrender.cpp" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group__unchecked__release_1ga596f8c68a7658af6e6507cf2e53b48a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pixel_t &amp;</type>
        <definition>pixel_t &amp; softrender::window_t::operator()</definition>
        <argsstring>(int const t_i, int const t_j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int const</type>
          <declname>t_i</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>t_j</declname>
        </param>
        <briefdescription>
<para>Access the rgba value at line=<computeroutput>t_i</computeroutput> and column=<computeroutput>t_j</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_i</parametername>
</parameternamelist>
<parameterdescription>
<para>Line of the inner rgba matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_j</parametername>
</parameternamelist>
<parameterdescription>
<para>Column of the inner rgba matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="177" column="1" bodyfile="src/softrender.cpp" bodystart="301" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="group__unchecked__release_1gaf85611ce1212eb525f069b8abf219728" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>pixel_t const  &amp;</type>
        <definition>pixel_t const  &amp; softrender::window_t::operator()</definition>
        <argsstring>(int const t_i, int const t_j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int const</type>
          <declname>t_i</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>t_j</declname>
        </param>
        <briefdescription>
<para>Get a const reference to the rgba value at line=<computeroutput>t_i</computeroutput> and column=<computeroutput>t_j</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t_i</parametername>
</parameternamelist>
<parameterdescription>
<para>Line of the inner rgba matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t_j</parametername>
</parameternamelist>
<parameterdescription>
<para>Column of the inner rgba matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="187" column="1" bodyfile="src/softrender.cpp" bodystart="312" bodyend="321"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>These are functions that will do no bound checking for you when you are running in release mode. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
