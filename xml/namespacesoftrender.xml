<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacesoftrender" kind="namespace" language="C++">
    <compoundname>softrender</compoundname>
    <innerclass refid="structsoftrender_1_1pixel__t" prot="public">softrender::pixel_t</innerclass>
    <innerclass refid="structsoftrender_1_1point__t" prot="public">softrender::point_t</innerclass>
    <innerclass refid="structsoftrender_1_1vec2" prot="public">softrender::vec2</innerclass>
    <innerclass refid="structsoftrender_1_1vec3" prot="public">softrender::vec3</innerclass>
    <innerclass refid="classsoftrender_1_1wavefront__model__t" prot="public">softrender::wavefront_model_t</innerclass>
    <innerclass refid="classsoftrender_1_1window__t" prot="public">softrender::window_t</innerclass>
    <innernamespace refid="namespacesoftrender_1_1colors">softrender::colors</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacesoftrender_1af4daf194eae9f26cced450f41039a44e" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref>&lt; int &gt;</type>
        <definition>using softrender::vec2i = typedef vec2&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>vec2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="228" column="1" bodyfile="src/include/vec.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesoftrender_1a3024b719fa7d071e9ea46e7fe7771f37" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref>&lt; float &gt;</type>
        <definition>using softrender::vec2f = typedef vec2&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>vec2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="229" column="1" bodyfile="src/include/vec.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesoftrender_1ac1e0bf91bbda4c419af787b565190159" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref>&lt; double &gt;</type>
        <definition>using softrender::vec2d = typedef vec2&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>vec2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="230" column="1" bodyfile="src/include/vec.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesoftrender_1a0f4ff27fc129e76f00dea07755b7099a" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec3" kindref="compound">vec3</ref>&lt; int &gt;</type>
        <definition>using softrender::vec3i = typedef vec3&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>vec3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="232" column="1" bodyfile="src/include/vec.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesoftrender_1a9c075f6f6c3f4c5b00b7ba2def706d9a" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec3" kindref="compound">vec3</ref>&lt; float &gt;</type>
        <definition>using softrender::vec3f = typedef vec3&lt;float&gt;</definition>
        <argsstring></argsstring>
        <name>vec3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="233" column="1" bodyfile="src/include/vec.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesoftrender_1a43d665a942e0b309fc1656eb173aa937" prot="public" static="no">
        <type><ref refid="structsoftrender_1_1vec3" kindref="compound">vec3</ref>&lt; double &gt;</type>
        <definition>using softrender::vec3d = typedef vec3&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>vec3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="234" column="1" bodyfile="src/include/vec.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a37d00fe2b5cd68551d3aa1494189b10f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::black</definition>
        <argsstring></argsstring>
        <name>black</name>
        <initializer>{ 0, 0, 0 }</initializer>
        <briefdescription>
<para>Material black color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="77" column="15" bodyfile="src/include/softrender.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a85f049c136a732d3243e145b48b20e6a" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::white</definition>
        <argsstring></argsstring>
        <name>white</name>
        <initializer>{ 255, 255, 255 }</initializer>
        <briefdescription>
<para>Material white color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="78" column="15" bodyfile="src/include/softrender.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1ad3e4c13b28602cefec19b9ec0a11348f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::red</definition>
        <argsstring></argsstring>
        <name>red</name>
        <initializer>{ 255, 0, 0 }</initializer>
        <briefdescription>
<para>Material red color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="79" column="15" bodyfile="src/include/softrender.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a6b1cff41b1dc71b11847e318b846c3c6" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::green</definition>
        <argsstring></argsstring>
        <name>green</name>
        <initializer>{ 0, 255, 0 }</initializer>
        <briefdescription>
<para>Material green color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="80" column="15" bodyfile="src/include/softrender.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a6d2f298d0b4299a8d4dfe9d127289c93" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::blue</definition>
        <argsstring></argsstring>
        <name>blue</name>
        <initializer>{ 0, 0, 255 }</initializer>
        <briefdescription>
<para>Material blue color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="81" column="15" bodyfile="src/include/softrender.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a2f3025d9f4c713c21d8369f1db3837ee" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::cyan</definition>
        <argsstring></argsstring>
        <name>cyan</name>
        <initializer>{ 0, 188, 212 }</initializer>
        <briefdescription>
<para>Material cyan color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="82" column="15" bodyfile="src/include/softrender.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a47fca84942ef141f44ce3140ca08a4b1" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::yellow</definition>
        <argsstring></argsstring>
        <name>yellow</name>
        <initializer>{ 255, 235, 59 }</initializer>
        <briefdescription>
<para>Material yellow color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="83" column="15" bodyfile="src/include/softrender.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a6ebde60731401ee19823f782882da25b" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::lime</definition>
        <argsstring></argsstring>
        <name>lime</name>
        <initializer>{ 205, 220, 57 }</initializer>
        <briefdescription>
<para>Material lime color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="84" column="15" bodyfile="src/include/softrender.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1af9650f0bab5f8543502533c9c7517155" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::teal</definition>
        <argsstring></argsstring>
        <name>teal</name>
        <initializer>{ 0, 150, 136 }</initializer>
        <briefdescription>
<para>Material teal color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="85" column="15" bodyfile="src/include/softrender.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a23de2a10748c9e308aac60758849fba0" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::purple</definition>
        <argsstring></argsstring>
        <name>purple</name>
        <initializer>{ 156, 39, 176 }</initializer>
        <briefdescription>
<para>Material purple color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="86" column="15" bodyfile="src/include/softrender.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a91f152a7da05a3c961600fd78afa81e7" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::pink</definition>
        <argsstring></argsstring>
        <name>pink</name>
        <initializer>{ 236, 64, 122 }</initializer>
        <briefdescription>
<para>Material pink color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="87" column="15" bodyfile="src/include/softrender.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1ad65838b67e041925bce6d091e3dd21b3" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::indigo</definition>
        <argsstring></argsstring>
        <name>indigo</name>
        <initializer>{ 63, 81, 181 }</initializer>
        <briefdescription>
<para>Material indigo color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="88" column="15" bodyfile="src/include/softrender.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1ae0d31bce1c2c6a12b055b75a4601e0d5" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::amber</definition>
        <argsstring></argsstring>
        <name>amber</name>
        <initializer>{ 255, 193, 7 }</initializer>
        <briefdescription>
<para>Material amber color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="89" column="15" bodyfile="src/include/softrender.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a5cdc07a818f5cab5294dfeabe8606bd2" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::orange</definition>
        <argsstring></argsstring>
        <name>orange</name>
        <initializer>{ 255, 152, 0 }</initializer>
        <briefdescription>
<para>Material orange color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="90" column="15" bodyfile="src/include/softrender.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1a5814b138ffc89ec65d75f0abd4a3c9aa" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::brown</definition>
        <argsstring></argsstring>
        <name>brown</name>
        <initializer>{ 121, 85, 72 }</initializer>
        <briefdescription>
<para>Material brown color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="91" column="15" bodyfile="src/include/softrender.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesoftrender_1_1colors_1abf1cbd4e572f6ff7ca86946c647aa565" prot="public" static="no" mutable="no">
        <type>const <ref refid="structsoftrender_1_1pixel__t" kindref="compound">pixel_t</ref></type>
        <definition>const pixel_t softrender::colors::grey</definition>
        <argsstring></argsstring>
        <name>grey</name>
        <initializer>{ 158, 158, 158 }</initializer>
        <briefdescription>
<para>Material grey color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="92" column="15" bodyfile="src/include/softrender.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesoftrender_1a7cfd2dc2b780770d404c6fa17cfa4c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::error</definition>
        <argsstring>(std::string const &amp;) -&gt; void</argsstring>
        <name>error</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>t_error</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/softrender.cpp" line="274" column="6" bodyfile="src/softrender.cpp" bodystart="274" bodyend="280" declfile="src/softrender.cpp" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacesoftrender_1a92f0e1563392fa48b5b1ded3dd2511f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::swap</definition>
        <argsstring>(point_t &amp;t_point) -&gt; void</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structsoftrender_1_1point__t" kindref="compound">point_t</ref> &amp;</type>
          <declname>t_point</declname>
        </param>
        <briefdescription>
<para>Swaps <computeroutput>t_point.x</computeroutput> and <computeroutput>t_point.y</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Useful for draw_line and possibly for other future algorithms. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/softrender.cpp" line="282" column="6" bodyfile="src/softrender.cpp" bodystart="282" bodyend="285" declfile="src/include/softrender.hpp" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacesoftrender_1ab169ab5d9616d758626eef9df266f084" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto softrender::cross</definition>
        <argsstring>(vec3&lt; T &gt; const &amp;t_a, vec3&lt; T &gt; const &amp;t_b) noexcept -&gt; vec3&lt; T &gt;</argsstring>
        <name>cross</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; const &amp;</type>
          <declname>t_a</declname>
        </param>
        <param>
          <type><ref refid="structsoftrender_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; const &amp;</type>
          <declname>t_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><formula id="0">\[ A \times B = \begin{vmatrix} x_A &amp; y_A &amp; z_A \\ x_B &amp; y_B &amp; z_B \\ i &amp; j &amp; k \end{vmatrix} = (y_A z_B - y_B z_A)\overrightarrow{i} - (z_B x_A - x_B z_A)\overrightarrow{j} + (x_A y_B - y_A x_B)\overrightarrow{k} = V( y_A z_B - y_B z_A, x_B z_A - z_B x_A, x_A y_B - y_A x_B ) \]</formula></para>
<para><simplesect kind="return"><para>The cross product of <computeroutput>t_a</computeroutput> and <computeroutput>t_b</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="257" column="7" bodyfile="src/include/vec.hpp" bodystart="257" bodyend="263"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>All key functionality is in this namespace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/softrender.cpp" line="15" column="20"/>
  </compounddef>
</doxygen>
