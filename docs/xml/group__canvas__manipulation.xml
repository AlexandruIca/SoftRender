<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__canvas__manipulation" kind="group">
    <compoundname>canvas_manipulation</compoundname>
    <title>Canvas manipulation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__canvas__manipulation_1ga5f2be04888560de972a8faf3257c361e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::window_t::from_coord2d_to_matrix</definition>
        <argsstring>(point_t const &amp;t_point) const noexcept -&gt; int</argsstring>
        <name>from_coord2d_to_matrix</name>
        <param>
          <type>point_t const &amp;</type>
          <declname>t_point</declname>
        </param>
        <briefdescription>
<para>Returns corresponding position in the rgba matrix of a point <computeroutput>t_point</computeroutput> as if the canvas was a 2d matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>With this you could say:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">this-&gt;<ref refid="group__canvas__manipulation_1ga11392099f8c0ae8d55ffdd9f8306dbe4" kindref="member">canvas</ref>()[this-&gt;<ref refid="group__canvas__manipulation_1ga5f2be04888560de972a8faf3257c361e" kindref="member">from_coord2d_to_matrix</ref>({</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>x=20,<sp/>y=30</highlight></codeline>
<codeline><highlight class="normal">})];</highlight></codeline>
</programlisting></para>
<para>which is equivalent to this:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">this-&gt;<ref refid="group__unchecked__release_1gaa689741a240fbc6a257b63ed24350dcc" kindref="member">operator()</ref>(x=20,<sp/>y=30);</highlight></codeline>
</programlisting></para>
<para>This will (hopefully) be useful for further optimizations for different algorithms(for example: draw_rect). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="297" column="11" bodyfile="src/softrender.cpp" bodystart="524" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group__canvas__manipulation_1ga11392099f8c0ae8d55ffdd9f8306dbe4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::window_t::canvas</definition>
        <argsstring>() noexcept -&gt; std::vector&lt; pixel_t &gt; &amp;</argsstring>
        <name>canvas</name>
        <briefdescription>
<para>Returns the underlying canvas/matrix with rgba values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="305" column="11" bodyfile="src/softrender.cpp" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="group__canvas__manipulation_1ga7bd4008d77748aeb3ecf8715224b79b4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::window_t::canvas</definition>
        <argsstring>() const noexcept -&gt; std::vector&lt; pixel_t &gt; const &amp;</argsstring>
        <name>canvas</name>
        <briefdescription>
<para>Returns the underlying canvas/matrix with rgba values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/softrender.hpp" line="311" column="11" bodyfile="src/softrender.cpp" bodystart="535" bodyend="538"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>These functions let you use the canvas directly but you shouldn&apos;t really use them unless you absolutely have to. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
