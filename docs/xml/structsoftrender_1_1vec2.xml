<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsoftrender_1_1vec2" kind="struct" language="C++" prot="public">
    <compoundname>softrender::vec2</compoundname>
    <includes local="no">vec.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structsoftrender_1_1vec2_1ab1ddb0ff29c296fc29187d7a63c0c0ac" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto softrender::vec2&lt; T &gt;::m_default_value</definition>
        <argsstring></argsstring>
        <name>m_default_value</name>
        <initializer>= static_cast&lt;unsigned char&gt;(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="16" column="27" bodyfile="src/include/vec.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsoftrender_1_1vec2_1af8a033c064d4b90206dcc17dd08710f9" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T softrender::vec2&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>{ m_default_value }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="19" column="7" bodyfile="src/include/vec.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsoftrender_1_1vec2_1a1943ea1df10a8d72a44128b09e225647" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T softrender::vec2&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <initializer>{ m_default_value }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="20" column="7" bodyfile="src/include/vec.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsoftrender_1_1vec2_1ad1c4a3f2f351f672324f00d6d5425ff9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>softrender::vec2&lt; T &gt;::vec2</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>vec2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1ad68f4ca290e10ce7de64f9ffeb857d31" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>softrender::vec2&lt; T &gt;::vec2</definition>
        <argsstring>(T const t_x, T const t_y) noexcept</argsstring>
        <name>vec2</name>
        <param>
          <type>T const</type>
          <declname>t_x</declname>
        </param>
        <param>
          <type>T const</type>
          <declname>t_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="24" column="5" bodyfile="src/include/vec.hpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1aba71a4cca32bb02c8b97efd7a5c14230" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>softrender::vec2&lt; T &gt;::vec2</definition>
        <argsstring>(vec2 const &amp;) noexcept=default</argsstring>
        <name>vec2</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1aa261d6fa7b423e62e49912d6995be51f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>softrender::vec2&lt; T &gt;::vec2</definition>
        <argsstring>(vec2 &amp;&amp;) noexcept=default</argsstring>
        <name>vec2</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1ac7fbd388196b53895b5e8990335da7c2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>softrender::vec2&lt; T &gt;::~vec2</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~vec2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a2b81ec1fea6f672be69ccdc7e14402aa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator=</definition>
        <argsstring>(vec2 const &amp;) noexcept -&gt; vec2 &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1ad86ffe0a246fad49269c9b83167e651a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator=</definition>
        <argsstring>(vec2 &amp;&amp;) noexcept -&gt; vec2 &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a1bd942a76b4fab4eb0f39e671d131928" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator==</definition>
        <argsstring>(vec2 const &amp;t_other) noexcept -&gt; bool</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="36" column="10" bodyfile="src/include/vec.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1abbf2d392ea6fdff67294d0b1b132af69" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator!=</definition>
        <argsstring>(vec2 const &amp;t_other) noexcept -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="40" column="10" bodyfile="src/include/vec.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a6084974f0a7a62584769cbf3df274532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator[]</definition>
        <argsstring>(int const t_index) -&gt; T &amp;</argsstring>
        <name>operator[]</name>
        <param>
          <type>int const</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="45" column="10" bodyfile="src/include/vec.hpp" bodystart="45" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a041e15284411147337d01ad49b4eb5b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator[]</definition>
        <argsstring>(int const t_index) const -&gt; T const &amp;</argsstring>
        <name>operator[]</name>
        <param>
          <type>int const</type>
          <declname>t_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="61" column="10" bodyfile="src/include/vec.hpp" bodystart="61" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a2142556c569e3a8d05d76ca4edff33a4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator+</definition>
        <argsstring>(vec2 const &amp;t_other) const noexcept -&gt; vec2</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="78" column="10" bodyfile="src/include/vec.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a3a7a943bca0b410cd2febd4f9b1f3e18" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator-</definition>
        <argsstring>(vec2 const &amp;t_other) const noexcept -&gt; vec2</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structsoftrender_1_1vec2" kindref="compound">vec2</ref> const &amp;</type>
          <declname>t_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="82" column="10" bodyfile="src/include/vec.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1aa7b2ad37a646ee477e4859c798c7127b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator*</definition>
        <argsstring>(int const t_factor) noexcept -&gt; vec2</argsstring>
        <name>operator*</name>
        <param>
          <type>int const</type>
          <declname>t_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="87" column="10" bodyfile="src/include/vec.hpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a5d41e586ff0859ed52bc4ebe684c4cdc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator*</definition>
        <argsstring>(float const t_factor) noexcept -&gt; vec2</argsstring>
        <name>operator*</name>
        <param>
          <type>float const</type>
          <declname>t_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="92" column="10" bodyfile="src/include/vec.hpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structsoftrender_1_1vec2_1a0e769656be6b21dbcc17468b03b9ae5e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto softrender::vec2&lt; T &gt;::operator*</definition>
        <argsstring>(double const t_factor) noexcept -&gt; vec2</argsstring>
        <name>operator*</name>
        <param>
          <type>double const</type>
          <declname>t_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/vec.hpp" line="97" column="10" bodyfile="src/include/vec.hpp" bodystart="97" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Vector with coordinates <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/include/vec.hpp" line="14" column="1" bodyfile="src/include/vec.hpp" bodystart="13" bodyend="102"/>
    <listofallmembers>
      <member refid="structsoftrender_1_1vec2_1ab1ddb0ff29c296fc29187d7a63c0c0ac" prot="private" virt="non-virtual"><scope>softrender::vec2</scope><name>m_default_value</name></member>
      <member refid="structsoftrender_1_1vec2_1abbf2d392ea6fdff67294d0b1b132af69" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator!=</name></member>
      <member refid="structsoftrender_1_1vec2_1aa7b2ad37a646ee477e4859c798c7127b" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator*</name></member>
      <member refid="structsoftrender_1_1vec2_1a5d41e586ff0859ed52bc4ebe684c4cdc" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator*</name></member>
      <member refid="structsoftrender_1_1vec2_1a0e769656be6b21dbcc17468b03b9ae5e" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator*</name></member>
      <member refid="structsoftrender_1_1vec2_1a2142556c569e3a8d05d76ca4edff33a4" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator+</name></member>
      <member refid="structsoftrender_1_1vec2_1a3a7a943bca0b410cd2febd4f9b1f3e18" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator-</name></member>
      <member refid="structsoftrender_1_1vec2_1a2b81ec1fea6f672be69ccdc7e14402aa" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator=</name></member>
      <member refid="structsoftrender_1_1vec2_1ad86ffe0a246fad49269c9b83167e651a" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator=</name></member>
      <member refid="structsoftrender_1_1vec2_1a1bd942a76b4fab4eb0f39e671d131928" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator==</name></member>
      <member refid="structsoftrender_1_1vec2_1a6084974f0a7a62584769cbf3df274532" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator[]</name></member>
      <member refid="structsoftrender_1_1vec2_1a041e15284411147337d01ad49b4eb5b0" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>operator[]</name></member>
      <member refid="structsoftrender_1_1vec2_1ad1c4a3f2f351f672324f00d6d5425ff9" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>vec2</name></member>
      <member refid="structsoftrender_1_1vec2_1ad68f4ca290e10ce7de64f9ffeb857d31" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>vec2</name></member>
      <member refid="structsoftrender_1_1vec2_1aba71a4cca32bb02c8b97efd7a5c14230" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>vec2</name></member>
      <member refid="structsoftrender_1_1vec2_1aa261d6fa7b423e62e49912d6995be51f" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>vec2</name></member>
      <member refid="structsoftrender_1_1vec2_1af8a033c064d4b90206dcc17dd08710f9" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>x</name></member>
      <member refid="structsoftrender_1_1vec2_1a1943ea1df10a8d72a44128b09e225647" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>y</name></member>
      <member refid="structsoftrender_1_1vec2_1ac7fbd388196b53895b5e8990335da7c2" prot="public" virt="non-virtual"><scope>softrender::vec2</scope><name>~vec2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
